####################################################
# .zshrc file                                      #
#                                                  #
# in the titles, the brackets are for vim folding. #
####################################################

#### Modeline and Notes #### {{{
# vim: set foldmarker={{{,}}} foldlevel=0 spell:
#### }}}

#### interactive shell check #### {{{
if [[ $- != *i* ]] ; then
    return
fi
#### end interactive check #### }}}

#### exports #### {{{
export EDITOR=/usr/bin/vim
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export TERM=xterm-256color
#### end exports #### }}}

#### prompt #### {{{
# https://github.com/nojhan/liquidprompt
[[ $- = *i* ]] && source ~/.zsh/liquidprompt/liquidprompt
#### end prompt #### }}}

#### misc zsh options #### {{{
setopt NO_BEEP                            # no more beeps
setopt autocd                             # no more pesky cd to change dirs
#### end misc zsh options #### }}}

#### zsh / oh my zsh plugins #### {{{
autoload -U compinit promptinit
compinit
zstyle ':completion::complete:*' use-cache 1
plugins=(zsh-completions vi-mode)
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
#### zsh / oh my zsh plugins #### }}}

#### zsh key bindings #### {{{
bindkey -v
bindkey -M vicmd '?' history-incremental-search-backward  # Better searching in command mode
bindkey -M vicmd '/' history-incremental-search-forward
bindkey "^[OA" up-line-or-beginning-search  # Beginning search with arrow keys
bindkey "^[OB" down-line-or-beginning-search
bindkey -M vicmd "k" up-line-or-beginning-search
bindkey -M vicmd "j" down-line-or-beginning-search
bindkey -M vicmd "^V" edit-command-line
export KEYTIMEOUT=1     # Make Vi mode transitions faster (KEYTIMEOUT is in hundredths of a second)

#  Mode indication
autoload -U colors && colors
function zle-line-init zle-keymap-select {
    _I_PMPT="%{$fg[red]%} [% INSERT]%  %{$reset_color%}"
    _N_PMPT="%{$fg[blue]%} [% NORMAL]%  %{$reset_color%}"
    RPS1="%B${${KEYMAP/vicmd/${_N_PMPT}}/(main|viins)/${_I_PMPT}}$b"
    #RPS1="%B${${KEYMAP/vicmd/NORMAL}/(main|viins)/INSERT}%b"
    RPS2=$RPS1
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

setopt transient_rprompt
#### end zsh key bindings #### }}}

#### zsh history #### {{{
HISTFILE=$HOME/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000
setopt APPEND_HISTORY                     # append rather than overwrite history file.
setopt EXTENDED_HISTORY                   # save timestamp and runtime information
setopt HIST_EXPIRE_DUPS_FIRST             # allow dups, but expire old ones when I hit HISTSIZE
setopt HIST_FIND_NO_DUPS                  # don't find duplicates in history
setopt HIST_IGNORE_ALL_DUPS               # ignore duplicate commands regardless of commands in between
setopt HIST_IGNORE_DUPS                   # ignore duplicate commands
setopt HIST_REDUCE_BLANKS                 # leave blanks out
setopt HIST_SAVE_NO_DUPS                  # don't save duplicates
setopt INC_APPEND_HISTORY                 # write after each command
setopt SHARE_HISTORY                      # share history between sessions
#### end zsh history #### }}}

#### zsh super globs #### {{{
setopt NO_CASE_GLOB                       # case insensitive globbing
setopt NUMERIC_GLOB_SORT                  # numeric glob sort
setopt extended_glob
setopt globdots                           # lets files beginning with a "." match explicitly without specifying
unsetopt caseglob
#### end super globs #### }}}

#### aliases and functions #### {{{
alias add='git add -p .'
alias commit='git commit .'
alias cpv="rsync -poghb --backup-dir=/tmp/rsync -e /dev/null --progress --"
alias d='dirs -v'
alias did="vim +'normal Go' +'r!date' ~/did.txt"
alias facts='elinks -dump randomfunfacts.com | sed -n '\''/^| /p'\'' | tr -d \|'
alias irc='tmux rename-window "weechat" ; weechat'
alias l80='awk '\''length > 80 {print FILENAME " line " FNR "\n\t" $0}'\'' *'
alias lg='git log --graph --pretty=format:'\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --abbrev-commit'
alias ls='ls -G'
alias o='popd'
alias p='pushd'
#alias ps='ps --forest'
alias pull='git pull --rebase && facts'
alias push='git push origin master && facts'
alias same="find . -type f -print0 | xargs -0 -n1 md5sum | sort -k 1,32 | uniq -w 32 -d --all-repeated=separate | sed -e 's/^[0-9a-f]*\ *//;'"
alias testunicode='perl -Mcharnames=:full -CS -wle '\''print "\N{EURO SIGN}"'\'''
alias wserver='python -m SimpleHTTPServer 8080'
alias x='exit'

function tunnel() { if [ -z $1 ] ; then echo "need hostname" ; else ssh -f -N -M -S /tmp/file-${1} ${1} ; fi }
function killtunnel() { if [ -z $1 ] ; then echo "need hostname" ; else ssh -S /tmp/file-${1} -O exit ${1} ; fi }

function checksum() { printf "FILE: `echo ${1}`\n" ; printf "SIZE: `ls -al ${1} | awk '{ print $5 }'` bytes\n" ; printf "MD5 : `md5sum ${1} | awk '{ print $1 }' | tr '[:lower:]' '[:upper:]'`\n" ; printf "SHA1: `sha1sum ${1} | awk '{ print $1 }' | tr '[:lower:]' '[:upper:]'`\n" }
function genpasswd() { if [ -z $1 ] ; then echo "need a character count" ; else tr -dc A-Za-z0-9_ < /dev/urandom | head -c ${1} | xargs ; fi }
function genpasswd_strong() { if [ -z $1 ] ; then echo "need a character count" ; else tr -dc 'a-zA-Z0-9-_!@#$%^&*()_+{}|:<>?=' < /dev/urandom | head -c ${1} | xargs; fi }
function h() { if [ -z "$*" ]; then history -d -i 1; else history -d -i 1 | egrep "$@"; fi; }
#### end aliases and functions #### }}}

#### tmux shell init #### {{{
if [[ $USER != root ]]; then
    tmux_count=`tmux ls | wc -l`
    if [[ "$tmux_count" == "0" ]]; then
        tmux -2
    else
        if [[ -z "$TMUX" ]]; then
            if [[ "$tmux_count" == "1" ]]; then
                session_id=1
            else
                session_id=`echo $tmux_count`
            fi
            tmux -2 new-session -d -s $session_id
            tmux -2 attach-session -t $session_id
        fi
    fi
else
fi
#### tmux init end #### }}}

#### colored man pages #### {{{
# as per : http://boredzo.org/blog/archives/2016-08-15/colorized-man-pages-understood-and-customized
man() {
    env \
        LESS_TERMCAP_mb=$(printf "\e[1;31m") \
        LESS_TERMCAP_md=$(printf "\e[1;31m") \
        LESS_TERMCAP_me=$(printf "\e[0m") \
        LESS_TERMCAP_se=$(printf "\e[0m") \
        LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
        LESS_TERMCAP_ue=$(printf "\e[0m") \
        LESS_TERMCAP_us=$(printf "\e[1;32m") \
            man "$@"
}
#### end colored man pages }
export PATH="~/Library/Python/2.7/bin:$PATH"
