## Modeline and Notes {
# vim: set foldmarker={,} foldlevel=0 spell:
# }

## Change prefix key to Ctrl+p {
unbind C-b
set -g prefix C-p
# }

## Last active window {
unbind l
bind C-a last-window
# }

## Copy mode {
unbind [
bind Escape copy-mode
# }

## Use Vi mode {
setw -g mode-keys vi
# }

## key bindings for splitting {
unbind %
bind | split-window -h
bind h split-window -h
unbind '"'
bind - split-window -v
bind v split-window -v
# }

## key binding for nested tmux {
unbind q
bind-key q send-prefix
# }

## History {
set -g history-limit 100000
# }

## Terminal emulator window title {
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'
# }

## Status Bar {
set -g status-bg black
set -g status-fg white
set -g status-interval 1
set -g status-left '#[fg=blue,bold]#h:#[fg=green,bold](#S)'
set -g status-left-length 75
set -g status-right '#[fg=green,bold][ #(acpi -V | head -n 1 ) ]#[fg=red,bold][ #(cut -d " " -f 1-3 /proc/loadavg) ]#[fg=cyan,bold][ %d-%b-%y | #[fg=green]%H:%M NYC #[fg=cyan,bold]| #[fg=yellow,bold]#(TZ='UTC' date -u +%%H:%%M) UTC #[fg=cyan,bold]]#[default]'
set -g status-right-length 175
# }

## Notifying if other windows has activities {
set -g visual-activity on
setw -g monitor-activity on
setw -g window-status-activity-attr bold,blink,underscore
# }

## Window status colors {
set -g status-fg blue
setw -g window-status-attr dim
setw -g window-status-bg black
setw -g window-status-current-attr bright
setw -g window-status-current-bg black
setw -g window-status-current-format " #[fg=red][#I]#[fg=blue] #W "
setw -g window-status-format " #[fg=yellow][#I]#[fg=white] #W "
setw -g window-status-separator " | "
# }

## Highlighting the active window by border {
set -g pane-active-border-bg blue
set -g pane-border-bg default
# }

## pane number display {
set -g display-panes-active-colour blue #blue
set -g display-panes-colour brightred #orange
# }

## Clock {
setw -g clock-mode-colour blue
# }

## term fixes {
setw -g xterm-keys on
# }

## window options {
setw -g automatic-rename
# }

## move current window to 0 {
bind-key T swap-window -t 0
# }

## move windows around {
# Pressing Ctrl+Shift+Left will move the current window to the left
# Similarly right.
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
# }

## mouse stuff {
setw -g mouse on
set -g mouse on
# }

## setting default termtype to screen 256 {
set -g default-terminal "screen-256color"
# }

## utf-8 settings {
set -g status-utf8 on
setw -g utf8 on
# }

## Sync tmux panes {
# from http://stackoverflow.com/questions/9250884/send-command-to-all-window-in-tmux
bind C-e command-prompt -p "session?,message?" "run-shell \"tmux list-windows -t %1 \| cut -d: -f1\|xargs -I\{\} tmux send-keys -t %1:\{\} %2\""
# }

## vi bindings for copy / paste using xclip {
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "xclip -sel clip -i"
# }

## vi bindings for copy / paste using xclip {
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "xclip -sel clip -i"
# }

## from http://unix.stackexchange.com/questions/45715/is-it-possible-to-get-a-hardcopy-in-tmux {
# C-H captures pane to /tmp/hardcopy
# bind H capture-pane ; save-buffer -b 0 ~/tmux.hardcopy ; delete-buffer -b 0
# }
